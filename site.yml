---
- name: Dotfiles
  hosts: localhost
  tasks:
    - name: Gather os specific variables
      include_vars: "requirements-{{ ansible_distribution | lower }}.yml"
      tags: config
    - name: Set up external sources for Fedora
      dnf: name={{ item }}
      with_items:
        - https://download1.rpmfusion.org/free/fedora/rpmfusion-free-release-28.noarch.rpm
        - https://download1.rpmfusion.org/nonfree/fedora/rpmfusion-nonfree-release-28.noarch.rpm
      become: true
      when: 'ansible_distribution == "Fedora"'
      tags: packages
    - name: Set up external sources for Ubuntu
      apt_repository:
        repo: ppa:bitcoin/bitcoin
      become: true
      when: 'ansible_distribution == "Ubuntu"'
      tags: packages
    - name: Install basic packages
      package: name={{ item }}
      with_items: "{{ base }}"
      become: true
      tags: packages
    - name: Install tools and software
      package: name={{ item }}
      with_items:
        # Tmux
        - xsel
        # Desktop
        - compton
        - rofi
        # Tools
        - bc
        - borgbackup
        - dex
        - git
        - gitk
        - htop
        - mc
        - ncmpcpp
        - powertop
        - ranger
        - rar
        - rtorrent
        - tig
        - vim
        # GUI
        - bitcoin-qt
        - shutter
        - stalonetray
        - thunar
        - xterm
        # Daemons
        - qt5ct
        - redshift
        - tlp
        - xautolock
        - xcape
      become: true
      tags: packages
    - name: Install bspwm requirements
      package: name={{ item }}
      with_items: "{{ req_bspwm }}"
      become: true
      tags: bspwm
    - name: Install sxhkd requirements
      package: name={{ item }}
      with_items: "{{ req_sxhkd }}"
      become: true
      tags: sxhkd
    - name: Install polybar requirements
      package: name={{ item }}
      with_items: "{{ req_polybar }}"
      become: true
      tags: polybar

    #
    # Base16
    #
    - name: Install Base16 Shell
      git:
        repo: https://github.com/chriskempson/base16-shell.git
        dest: '{{ base16_path }}'
        version: master
      tags: base16
    - name: Configure Base16 Shell
      blockinfile:
        path: '{{ bashrc }}'
        marker: "# {mark} Base16 Shell config {kmarc's dotfiles}"
        block: |
          BASE16_SHELL="{{ base16_path }}"
          [ -n "$PS1" ] && \
              [ -s "$BASE16_SHELL/profile_helper.sh" ] && \
                  eval "$("$BASE16_SHELL/profile_helper.sh")"
      tags: base16
    - name: Select a default bash theme
      command: /bin/bash -cil 'base16_{{ base16_theme }}'
      args:
        creates: '$HOME/.base16_theme'
      changed_when: false
      tags: base16

    #
    # Bash-it
    #
    - name: Install Bash-it
      git:
        repo: https://github.com/Bash-it/bash-it.git
        dest: '{{ bashit_path }}'
        version: master
      tags: bashit
    - name: Configure Bash-it
      command: |
        /bin/bash -cl '{{ bashit_path }}/install.sh --silent --no-modify-config'
      changed_when: false
      tags: bashit
    - name: Configure Base16 Shell
      blockinfile:
        path: '{{ bashrc }}'
        marker: "# {mark} Bash-it config {kmarc's dotfiles}"
        block: |
          export BASH_IT="{{ bashit_path }}"
          source "$HOME"/.bashrc.kmarc
          source "$BASH_IT"/bash_it.sh
      tags: bashit

    #
    # vim
    #
    - name: Install kmarc's vim configuration
      git:
        repo: git@github.com:kmARC/vim.git
        dest: '{{ vim_path }}'
        version: master
      tags: vim
    - name: Install vim plugins
      command: bash -cil 'vim -c ":PlugInstall" -c ":qa!"'
      changed_when: false
      tags: vim

    #
    # bspwm
    #
    - name: Download bspwm
      git:
        repo: https://github.com/baskerville/bspwm
        dest: '{{ bspwm_path }}'
        version: '{{ bspwm_version }}'
      tags: bspwm
    - name: Compile bspwm
      command: bash -c 'make'
      args:
        chdir: '{{ bspwm_path }}'
      changed_when: false
      tags: bspwm
    - name: Install bspwm
      # FIXME: this should be ran as `become` but then $HOME is root
      command: bash -c 'sudo make install'
      args:
        chdir: '{{ bspwm_path }}'
      changed_when: false
      tags: bspwm

    #
    # sxhkd
    #
    - name: Download sxhkd
      git:
        repo: https://github.com/baskerville/sxhkd
        dest: '{{ sxhkd_path }}'
        version: '{{ sxhkd_version }}'
      tags: sxhkd
    - name: Compile sxhkd
      command: bash -c 'make'
      args:
        chdir: '{{ sxhkd_path }}'
      changed_when: false
      tags: sxhkd
    - name: Install sxhkd
      # FIXME: this should be ran as `become` but then $HOME is root
      command: bash -c 'sudo make install'
      args:
        chdir: '{{ sxhkd_path }}'
      changed_when: false
      tags: sxhkd

    #
    # polybar
    #
    - name: Download polybar
      git:
        repo: https://github.com/jaagr/polybar
        dest: '{{ polybar_path }}'
        version: '{{ polybar_version }}'
      tags: polybar
    - name: Compile polybar
      shell: |
        cd build
        rm -rf *
        cmake ..
        make -j5
      args:
        chdir: '{{ polybar_path }}'
      tags: polybar
      changed_when: false
    - name: Install polybar
      # FIXME: this should be ran as `become` but then $HOME is root
      command: bash -c 'sudo make install'
      args:
        chdir: '{{ polybar_path }}'
      changed_when: false
      tags: polybar
    - name: Download Material Icon Font
      unarchive:
        src: "https://github.com/google/material-design-icons/\
              raw/2.2.0/iconfont/MaterialIcons-Regular.ttf"
        dest: '$HOME/.fonts/'
        remote_src: true
        creates: '$HOME/.fonts/MaterialIcons-Regular.ttf'
      become: true
      tags: polybar

    #
    # i3lock
    #
    - name: Download i3lock
      git:
        repo: https://github.com/PandorasFox/i3lock-color
        dest: '{{ i3lock_path }}'
        version: '{{ i3lock_version }}'
      tags: i3lock
    - name: Compile i3lock
      shell: |
        ./configure
        make -j5
      args:
        chdir: '{{ i3lock_path }}'
      tags: i3lock
      changed_when: false
    - name: Install i3lock
      # FIXME: this should be ran as `become` but then $HOME is root
      command: bash -c 'sudo make install'
      args:
        chdir: '{{ i3lock_path }}'
      changed_when: false
      tags: i3lock

    #
    # popcorntime
    #
    - name: Ensure PopcornTime path exists
      file:
        path: '{{ popcorntime_path }}'
        state: directory
        mode: 0755
      become: true
      tags: popcorntime
    - name: Download popcorntime
      unarchive:
        src: "https://mirror03.popcorntime.sh/repo/build/\
              Popcorn-Time-{{ popcorntime_version }}-Linux-64.tar.xz"
        dest: '{{ popcorntime_path }}'
        remote_src: true
        creates: '{{ popcorntime_path }}/Popcorn-Time'
      become: true
      tags: popcorntime
    - name: Copy template popcorntime.desktop
      template:
        src: popcorntime.desktop.j2
        dest: '$HOME/.local/share/applications/popcorntime.desktop'
      tags: popcorntime

    #
    # Dotfiles
    #
    - name: Symlink config files
      file:
        src: '{{ playbook_dir }}/{{ item }}'
        dest: '$HOME/.{{ item }}'
        state: link
      with_items:
        - config/bspwm
        - config/polybar
        - config/sxhkd
        - bashrc.kmarc
        - compton.conf
        - gitconfig
        - rtorrent.rc
        - stalonetrayrc
        - theme.rofi.Xresources
        - tmux.conf
        - toprc
        - Xresources
        - xprofile
        - xstart
        - xstop
      tags: config
    - name: Symlink bin
      file:
        src: '{{ playbook_dir }}/{{ item }}'
        dest: '$HOME/{{ item }}'
        state: link
      with_items:
        - bin
      tags: config
    - name: Run scripts
      command: |
        bash -cil '\
          xrdb -load $HOME/.Xresources && \
          $HOME/bin/colorize.sh \
        '
      changed_when: false
      tags: config
