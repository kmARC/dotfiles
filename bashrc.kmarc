#!/usr/bin/env bash
# shellcheck disable=SC2016,SC1090

unset PROMPT_COMMAND

###########################
#  Environment variables  #
###########################
if [[ $OSTYPE == 'darwin'* ]]; then
  HOMEBREW_PREFIX="${HOMEBREW_PREFIX:-$(brew --prefix)}"
fi

source "$HOME"/.config/environment.d/*.conf

export HISTSIZE=65536
export HISTCONTROL=ignorespace

#########
#  FZF  #
#########
# ALT-O opens selected file with xdg-open
function __fzf_open__() {
  local cmd file
  cmd="${FZF_ALT_O_COMMAND:-"command find -L . \\( -path '*/\\.*' -o -fstype 'devfs' -o -fstype 'devtmpfs' -o -fstype 'proc' \\) -prune \
    -o -type f -print 2> /dev/null | sed 1d | cut -b3-"}"
  file=$(eval "$cmd | $(__fzfcmd) +m $FZF_ALT_O_OPTS") && printf '/usr/bin/xdg-open %q/%q' "$PWD" "$file"
}

# bind \M-o to __fzf_open__()
if [[ ! -o vi ]]; then
  # ALT-O - open file
  bind '"\eo": " \C-e\C-u`__fzf_open__`\e\C-e\er\C-m"'
else
  # ALT-O - open file
  bind '"\eo": "\C-x\C-addi`__fzf_open__`\C-x\C-e\C-x\C-r\C-m"'
  bind -m vi-command '"\eo": "ddi`__fzf_open__`\C-x\C-e\C-x\C-r\C-m"'
fi

if [ -f "$HOME/.fzf.bash" ]; then
  source "$HOME/.fzf.bash"
elif [ -f /usr/share/fzf/completion.bash ]; then
  source /usr/share/fzf/key-bindings.bash
  source /usr/share/fzf/completion.bash
else
  source /usr/local/share/fzf/shell/key-bindings.bash
  source /usr/local/share/fzf/shell/completion.bash
fi

###################
#  NODE.JS - NVM  #
###################
export NVM_DIR="${NVM_DIR:-$XDG_DATA_HOME/nvm}"
# shellcheck source=/dev/null
[ -s "$NVM_DIR/nvm.sh" ] && \. "$NVM_DIR/nvm.sh" --no-use  # This loads nvm
# shellcheck source=/dev/null
[ -s "$NVM_DIR/bash_completion" ] && \. "$NVM_DIR/bash_completion"  # This loads nvm bash_completion

##########
#  TMUX  #
##########
alias tmux-session="tmux attach -t Session || tmux new -s Session"
function ssh-tmux() { ssh "$1" -t 'tmux attach'; }
if [[ $OSTYPE == 'darwin'* ]]; then
  source "$HOMEBREW_PREFIX"/etc/profile.d/bash_completion.sh
else
  _completion_loader ssh
  complete -F _ssh ssh ssh-tmux
fi

[ -n "$TMUX" ] && export PANE_ID=$(tmux display-message -p '#P')

############
#  DIRENV  #
############
eval "$(direnv hook bash)"

################
#  Journaling  #
################
NOTES_DIR="$HOME/Documents/Notes"
alias notes='(cd $NOTES_DIR && vim index.md)'
alias   did='(cd $NOTES_DIR && vim did.txt +"normal ggO" +"r!date +\%Y-\%m-\%d\ \%a")'

function minutes() {
  if [ -n "$1" ]; then local topic="-$1"; else local topic=""; fi
  (cd "$NOTES_DIR/meetings" && exec vim "minutes-$(date --iso-8601)$topic.md" -s <(echo 'iTHIS IS BROKEN NOW') )
}

alias t="todo.sh"
if [[ $OSTYPE != 'darwin'* ]]; then
  _completion_loader todo.sh
fi
complete -F _todo todo.sh t

alias home="(cd \$HOME/Documents/Home/ && vim index.md)"
#############
#  THEMING  #
#############
# Colorized less / man / pydoc
export LESS=-R
export LESS_TERMCAP_mb=$'\e[0;49;39m'
export LESS_TERMCAP_md=$'\e[1;49;35m'
export LESS_TERMCAP_me=$'\e[0;49;39m'
export LESS_TERMCAP_so=$'\e[1;46;97m'
export LESS_TERMCAP_se=$'\e[0;49;39m'
export LESS_TERMCAP_us=$'\e[1;49;36m'
export LESS_TERMCAP_ue=$'\e[0;49;39m'

[[ -s "/etc/profile.d/grc.sh" ]] && source /etc/profile.d/grc.sh

# fix dircolors for Selenized
# (https://github.com/jan-warchol/selenized/tree/master/other-apps/dircolors)
export LS_COLORS="$LS_COLORS:ow=1;7;34:st=30;44:su=30;41"

#########################
#  EXPORTS AND ALIASES  #
#########################
export PAGER=less
export EDITOR=vim
export GPG_TTY=$(tty)

alias ls="ls --color --group-directories-first"
alias diff='diff --color=auto'
alias grep='grep --color=auto'
alias mutt='neomutt'
alias sudo='sudo '
alias htop='TERM=xterm-256color htop'
alias ssh='TERM=xterm-256color ssh'
alias monerod="monerod --data-dir ${XDG_DATA_HOME}/bitmonero"

git-recursive-pull() {
    find . -type d -path '*/.git' -prune -printf "%h\n" \
      | xargs -n1 -P4 bash -c \
          'cd $1; if ! git pull --all &>/dev/null; then echo "ERROR:   $1"; else echo "SUCCESS: $1"; fi' --
}

if command -v kubectl >/dev/null; then
  alias k=kubectl

  if [[ $OSTYPE != 'darwin'* ]]; then
    _completion_loader kubectl
  fi
  complete -o default -F __start_kubectl k

  if command -v kubecolor >/dev/null; then
    alias k=kubecolor
  fi
fi


if command -v helm >/dev/null; then
  source <(helm completion bash)
fi

if command -v mvn >/dev/null; then
  mvnrun() {
    echo mvn "$@"
    mvn "$@"
    echo mvn "$@"
  }
  alias mci='mvnrun clean install'
  alias mcin='mvnrun clean install -DskipTest'
  alias mjacoco='mvnrun jacoco:report'
  alias mjavadoc='mvnrun javadoc:aggregate'
  alias me='mvnrun exec:java'
  alias mcie='mvnrun clean install exec:java'
  alias med='MAVEN_OPTS=-agentlib:jdwp=transport=dt_socket,server=y,suspend=y,address=5005 mvn exec:java'
  complete -o default -o nospace -F _mvn mci mcis mjacoco mjavadoc me mcie
fi

cheat() { curl -m10 "http://cheat.sh/$1"; }

##################
#  LIQUIDPROMPT  #
##################
# Enable liquidprompt only in interactive and non-mc shells
if [[ -z "$MC_SID" && $- = *i* ]]; then
  if [[ $OSTYPE == 'darwin'* ]]; then
    source "$HOMEBREW_PREFIX"/share/liquidprompt
  else
    source `which liquidprompt`
  fi
fi


##################################################################
#  AutoStart                                                     #
#  https://wiki.archlinux.org/index.php/Sway#Autostart_on_login  #
##################################################################
if [[ -z $DISPLAY ]] && [[ $(tty) = /dev/tty1 ]]; then
  eval $(gnome-keyring-daemon --start)
  export SSH_AUTH_SOCK
  # XKB_DEFAULT_LAYOUT=us exec sway
  exec startplasma-wayland
fi

if [ -f "$HOME"/.bashrc.local ]; then
  source "$HOME"/.bashrc.local
fi

#######################
#  Homebrew prefixes  #
#######################
if [[ $OSTYPE == 'darwin'* ]]; then
  for tool in \
    coreutils \
    findutils \
    gnu-sed \
    grep \
  ; do
    export PATH="$HOMEBREW_PREFIX/opt/$tool/libexec/gnubin:$PATH"
  done
fi


###############
#  dark mode  #
###############
if [[ $OSTYPE == 'darwin'* ]]; then
  if [[ "$(defaults read -g AppleInterfaceStyle 2>/dev/null)" == "Dark" ]]; then
    sed --follow-symlinks -i 's/\(alacritty\.\)light\(\.toml\)/\1dark\2/g' "$HOME/.config/alacritty.toml"
  else
    sed --follow-symlinks -i 's/\(alacritty\.\)dark\(\.toml\)/\1light\2/g' "$HOME/.config/alacritty.toml"
  fi
fi
